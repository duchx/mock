<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:contextx="http://www.souche-inc.com/schema/contextx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.souche-inc.com/schema/contextx
        http://www.souche-inc.com/schema/contextx.xsd
        ">
	<context:annotation-config />
	<!-- 自动搜索@Controller标注的类 -->
	<context:component-scan base-package="com.souche.**.controller" />
	<context:component-scan base-package="com.souche.**.registry" />
	<context:component-scan base-package="com.souche.**" />
	<contextx:component-scan base-package="com.souche.**.mock" />
	
	<mvc:annotation-driven />
	<mvc:interceptors> 
    	 <mvc:interceptor>  
            <mvc:mapping path="/**"/>  
            <bean class="com.souche.optimus.core.interceptor.RequestIntercepAggregator" autowire="byName"/>  
        </mvc:interceptor>  
    </mvc:interceptors>  
	
	<!-- 视图解析器，所有modelview返回自动添加前后缀 -->
	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>WEB-INF/velocity/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
				<prop key="contentType">text/html;charset=UTF-8</prop>
			</props>
		</property>
	</bean>

	<bean id="velocityViewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="suffix">
			<value>.vm</value>
		</property>
		<property name="dateToolAttribute">
			<value>dateTool</value>
		</property>
		<property name="numberToolAttribute">
			<value>numberTool</value>
		</property>
		<property name="toolboxConfigLocation" value="/WEB-INF/velocity-toolbox.xml" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- velocity使用spring 宏 绑定表单域 -->
		<property name="exposeSpringMacroHelpers">
			<value>true</value>
		</property>

		<!-- 将servlet请求和会话中的属性复制到模型 -->
		<property name="exposeRequestAttributes">
			<value>true</value>
		</property>
		<property name="exposeSessionAttributes">
			<value>true</value>
		</property>
		<property name="requestContextAttribute" value="rc" /><!--request属性引用名称 -->

	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<!-- 配置静态资源的路径，比如js，和图片，不用被spring mvc进行解析处理 -->
	<mvc:default-servlet-handler />

	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000" /><!-- 5M -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- 异常解析器 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>/common/error</value>
		</property>

		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">/common/error</prop>
				<prop key="java.lang.Throwable">/common/error</prop>
				<prop key="javax.servlet.ServletException">/common/error</prop>
				<prop key="java.lang.RuntimeException">/common/error</prop>
				<prop key="java.sql.SQLException">/common/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="/common/error">500</prop>
				<prop key="/common/error">404</prop>
			</props>
		</property>

		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver
			</value>
		</property>
	</bean>
	
	<bean class="org.optimus.swagger.config.SwaggerOptimusConfig"></bean>
	

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>

</beans>
